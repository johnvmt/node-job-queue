{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/IndexedLinkedList.js","src/JobsQueue.js"],"names":["IndexedLinkedList","this","list","length","head","tail","prototype","peek","data","Error","hasIndex","index","forEach","callback","item","next","dequeue","_removeItem","remove","push","_resetIndex","prev","enqueue","error","_set","undefined","module","exports","JobsQueue","passedOptions","defaultOptions","maxSimultaneous","options","_objectMerge","queuedJobList","inprogressJobList","inprogress","queued","require","_tryStartNextJob","maxFromArray","maxList","limitedMaxList","filter","maxFromOption","Math","min","apply","maxInProgress","globalMaxSimultaneous","inprogressMaxSimultaneous","job","nextJob","nextJobMaxSimultaneous","jobId","start","controller","complete","_finishJob","self","_uniqueId","jobController","cancel","_objectForEach","object","property","hasOwnProperty","merged","arguments","argument","attrname","s4","floor","random","toString","substring"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","function IndexedLinkedList() {\n\tthis.list = {};\n\tthis.length = 0;\n\tthis.head = null;\n\tthis.tail = null;\n}\n\n/**\n * Peek at head, without removing it\n */\nIndexedLinkedList.prototype.peek = function () {\n\tif(this.length > 0)\n\t\treturn this.head.data;\n\telse\n\t\tthrow new Error('list_empty');\n};\n\n/**\n * Check if item with given index exists\n */\nIndexedLinkedList.prototype.hasIndex = function(index) {\n\treturn (typeof this.list[index] == 'object');\n};\n\n/**\n * Iterate over list, starting at head\n */\nIndexedLinkedList.prototype.forEach = function(callback) {\n\tvar item = this.head;\n\twhile(item != null) {\n\t\tcallback(item.data);\n\t\titem = item.next;\n\t}\n};\n\n/**\n * Remove from head\n */\nIndexedLinkedList.prototype.dequeue = function() {\n\treturn this._removeItem(this.head);\n};\n\n/**\n * Remove item at given index\n * @param index\n */\nIndexedLinkedList.prototype.remove = function(index) {\n\tthis._removeItem(this.list[index]);\n};\n\n/**\n * Add at head\n * @param index\n * @param data\n */\nIndexedLinkedList.prototype.push = function(index, data) {\n\tvar item = this._resetIndex(index, data);\n\n\t// Link it to the list\n\tif(this.head != null)\n\t\tthis.head.prev = item;\n\n\titem.prev = null;\n\titem.next = this.head;\n\n\tthis.head = item;\n\n\tif(this.length == 0)\n\t\tthis.tail = item;\n\n\t// Change the list length\n\tthis.length++;\n};\n\n/**\n * Add at tail\n * @param index\n * @param data\n */\nIndexedLinkedList.prototype.enqueue = function(index, data) {\n\tvar item = this._resetIndex(index, data);\n\n\t// Link it to the list\n\tif(this.tail != null)\n\t\tthis.tail.next = item;\n\n\titem.next = null;\n\titem.prev = this.tail;\n\n\tthis.tail = item;\n\n\tif(this.length == 0)\n\t\tthis.head = item;\n\n\t// Change the list length\n\tthis.length++;\n};\n\n/**\n * Unlink the item from the list, if it exists\n * @param index\n * @param data\n * @private\n */\nIndexedLinkedList.prototype._resetIndex = function(index, data) {\n\t// Remove the item if it exists\n\ttry {\n\t\tthis.remove(index);\n\t}\n\tcatch(error) {}\n\n\t// Add the item to the list\n\treturn this._set(index, data);\n};\n\n/**\n * Set the data for an item; create the item if it doesn't exist\n * @param index\n * @param data\n * @private\n */\nIndexedLinkedList.prototype._set = function(index, data) {\n\tif(typeof this.list[index] == 'object') // item already exists\n\t\tthis.list[index].data = data;\n\telse {\n\t\tthis.list[index] = {\n\t\t\tdata: data,\n\t\t\tnext: undefined,\n\t\t\tprev: undefined\n\t\t}\n\t}\n\n\treturn this.list[index];\n};\n\n/**\n * Remove given item from the list\n * @param item\n * @returns {*|string|CanvasPixelArray|Object[]}\n * @private\n */\nIndexedLinkedList.prototype._removeItem = function(item) {\n\tif(typeof item != 'object' || item == null)\n\t\tthrow new Error('undefined_item');\n\telse {\n\t\t// Set next item's prev to current item's prev\n\t\tif(item.next == null) // item is at tail\n\t\t\tthis.tail = item.prev;\n\t\telse // item is not at tail\n\t\t\titem.next.prev = item.prev;\n\n\t\tif(item.prev == null) // item is at head\n\t\t\tthis.head = item.next;\n\t\telse // item is not at head\n\t\t\titem.prev.next = item.next;\n\n\t\tthis.length--;\n\t\treturn item.data;\n\t}\n};\n\nmodule.exports = function() {\n\treturn new IndexedLinkedList();\n};","var IndexedLinkedList = require('./IndexedLinkedList');\n\nfunction JobsQueue(passedOptions) {\n\tvar defaultOptions = {\n\t\tmaxSimultaneous: 1\n\t};\n\n\tthis.options = this._objectMerge(defaultOptions, passedOptions)\n\n\tthis.queuedJobList = IndexedLinkedList();\n\tthis.inprogressJobList = IndexedLinkedList();\n\n\tthis.inprogress = 0;\n\tthis.queued = 0;\n}\n\nJobsQueue.prototype._tryStartNextJob = function() {\n\tif(this.queuedJobList.length) {\n\t\t// Get max simultaneous jobs from jobs in progress, next job in queue, global max; take min of these to get max\n\t\tvar globalMaxSimultaneous = maxFromOption(this.options.maxSimultaneous);\n\n\t\tvar inprogressMaxSimultaneous = 0;\n\t\tthis.inprogressJobList.forEach(function(job) {\n\t\t\tinprogressMaxSimultaneous = maxFromArray([inprogressMaxSimultaneous, job.options.maxSimultaneous]);\n\t\t});\n\n\t\tvar nextJob = this.queuedJobList.peek();\n\t\tvar nextJobMaxSimultaneous = maxFromOption(nextJob.options.maxSimultaneous);\n\n\t\tvar maxSimultaneous = maxFromArray([globalMaxSimultaneous, inprogressMaxSimultaneous, nextJobMaxSimultaneous]);\n\n\t\tif(maxSimultaneous <= 0 || this.inprogress < maxSimultaneous) { // Start the next job\n\t\t\tvar job = this.queuedJobList.dequeue(); // Remove from the queued jobs list\n\t\t\tthis.queued--;\n\n\t\t\tthis.inprogressJobList.enqueue(job.jobId, job); // Add to the jobs in progress list, with same ID\n\t\t\tthis.inprogress++;\n\n\t\t\tjob.start(job.controller.complete); // Start the job and pass in the callback to finish the job\n\t\t\tthis._tryStartNextJob(); // May be able to run jobs simultaneously\n\t\t}\n\t}\n\n\tfunction maxFromArray(maxList) {\n\t\tvar limitedMaxList = maxList.filter(function(maxSimultaneous) {\n\t\t\treturn maxFromOption(maxSimultaneous) > 0;\n\t\t});\n\t\treturn (limitedMaxList.length > 0) ? Math.min.apply(null, limitedMaxList) : 0;\n\t}\n\n\tfunction maxFromOption(maxInProgress) {\n\t\treturn (typeof maxInProgress == 'number' && maxInProgress > 0) ? maxInProgress : 0;\n\t}\n};\n\nJobsQueue.prototype._finishJob = function(jobId) {\n\tif(this.inprogressJobList.hasIndex(jobId)) {\n\t\tthis.inprogressJobList.remove(jobId);\n\t\tthis.inprogress--;\n\t\tthis._tryStartNextJob();\n\t}\n\telse if(this.queuedJobList.hasIndex(jobId)) {\n\t\tthis.queuedJobList.remove(jobId);\n\t\tthis.queued--;\n\t\tthis._tryStartNextJob();\n\t}\n\telse\n\t\tthrow new Error('job_not_found');\n};\n\nJobsQueue.prototype.enqueue = function(callback, options) {\n\tvar self = this;\n\tvar jobId = this._uniqueId();\n\tvar jobController = {\n\t\tcancel: function() {\n\t\t\tself._finishJob(jobId);\n\t\t},\n\t\tcomplete: function() {\n\t\t\tself._finishJob(jobId);\n\t\t}\n\t};\n\n\tself.queuedJobList.enqueue(jobId, {\n\t\tjobId: jobId,\n\t\tstart: callback,\n\t\toptions: self._objectMerge({}, options),\n\t\tcontroller: jobController\n\t});\n\n\tthis.queued++;\n\n\tthis._tryStartNextJob();\n\n\treturn jobController;\n};\n\nJobsQueue.prototype._objectForEach = function(object, callback) {\n\t// run function on each property (child) of object\n\tvar property;\n\tfor(property in object) { // pull keys before looping through?\n\t\tif (object.hasOwnProperty(property))\n\t\t\tcallback(object[property], property, object);\n\t}\n};\n\nJobsQueue.prototype._objectMerge = function() {\n\tvar merged = {};\n\tthis._objectForEach(arguments, function(argument) {\n\t\tfor (var attrname in argument) {\n\t\t\tif(argument.hasOwnProperty(attrname))\n\t\t\t\tmerged[attrname] = argument[attrname];\n\t\t}\n\t});\n\treturn merged;\n};\n\nJobsQueue.prototype._uniqueId = function() {\n\tfunction s4() {\n\t\treturn Math.floor((1 + Math.random()) * 0x10000)\n\t\t\t.toString(16)\n\t\t\t.substring(1);\n\t}\n\treturn s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n\t\ts4() + '-' + s4() + s4() + s4();\n};\n\nmodule.exports = function(options) {\n\treturn new JobsQueue(options);\n};"]}